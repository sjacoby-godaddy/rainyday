# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
#    branches: [ master ]
    branches: [ none ]
  pull_request:
#    branches: [ master ]
    branches: [ none ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    name: Connect AWS ECR
    runs-on: ubuntu-latest

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@a17646e2633d1f79886a1530ccce16c95a3bb8dc
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # Add a github secret with your Deploy User AccessKeyId from AWS Secrets Manager
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} # Add a github secret with your Deploy User SecretAccessKey from AWS Secrets Manager
        role-to-assume: arn:aws:iam::664122783931:role/GD-AWS-USA-CTO-JenkinsonAWS-Dev-Private-Deploy # Your deploy role ARN 
        role-duration-seconds: 7200 # default max is 7200
        aws-region: us-west-2 # set region you want to target

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@41032bd0f8164c350fb597a5e1ec886624de7465

    - name: Pull image from Golden Container ECR
      env:
        ECR_REGISTRY: 764525110978.dkr.ecr.${{ env.AWS_DEFAULT_REGION }}.amazonaws.com # Do NOT change (region pulled from above)!
        ECR_REPOSITORY: alpine-tartufo # repo you want to use
        IMAGE_TAG: v2.4.0 # tag you want to use
      run: |
        echo "Using: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
        aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY
        docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
