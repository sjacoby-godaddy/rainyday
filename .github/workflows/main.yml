# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    name: Connect AWS ECR
    runs-on: ubuntu-latest

    steps:
    - name: Checkout GoDaddy Actions
      uses: actions/checkout@v01aeccc
      with: 
        repository: gdcorp-cp/gd-actions
        ref: v1 # The version of gdcorp-cp/gd-actions to check out
        token: ${{ secrets.GD_ACTIONS_REPO_PAT }} # PAT with read access 
        path: gd-actions
        persist-credentials: false

    - name: Configure AWS credentials
      uses: ./gdcorp-actions/aws-okta-authenticate
      with:
        aws-okta-user: ${{ secrets.AWS_DEV_PRIVATE_JOMAX_USER}}
        aws-okta-pass: ${{ secrets.AWS_DEV_PRIVATE_JOMAX_PASS}}
        aws-okta-organization: godaddy.okta.com
        aws-okta-application: https://godaddy.okta.com/home/amazon_aws/0oakmpp1rkb2ZuZsQ0x7/272 # non-pci
        aws-okta-role: arn:aws:iam::664122783931:role/GD-AWS-USA-CTO-JenkinsonAWS-Dev-Private-Deploy # full-arn-to-dev-private-deploy-role
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@41032bd0f8164c350fb597a5e1ec886624de7465

    - name: Pull image from Amazon ECR
      env:
        AWS_REGION: us-west-2
        ECR_REGISTRY: 764525110978.dkr.ecr.$AWS_REGION.amazonaws.com
        ECR_REPOSITORY: alpine
        IMAGE_TAG: 3.12
      run: |
        docker pull -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
